local *

import Flag, Param, Subcommand from require 'clap'
import 'majo.producer'
import 'majo.consumer'

export is_active = (args) -> args.start?
export register_args = (parser) -> with parser
  \add with Subcommand 'start'
    \description 'start a majo node'
    \add with Param 'type'
      \description 'the node type to assign to this computer'
      \options
        * 'producer'
        * 'consumer'
        * 'marshal'
    \add with Flag 'no-install'
      \short nil
      \description 'skip startup hook installation'

export run = (args) ->
  if not args.start.no_install
    install args.start

  switch args.start.type
    when 'producer'
      producer.run args.start
    when 'consumer'
      consumer.run args.start
    when 'marshal'
      error 'todo'
    else
      error "internal error: unrecognised node type #{args.start.type}"

install = (start_args) ->
  node_type = start_args.type

  with? file = io.open 'startup.lua', 'w+'
    file\write "
      shell.run('set motd.enable false')
      shell.run('majo start #{node_type} --no-install')
    "
